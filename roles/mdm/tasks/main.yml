- set_fact: role_name_scaleio=mdm

- set_fact: node_is_manager=1

- name: install pre-requisite packages
  package: name={{ item }} state=latest
  with_items: "{{ scaleio.mdm_packages }}"

- name: pre-requisite on rhel6 based os
  sysctl: name=kernel.shmmax value=209715200
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

- include: ../../install_scaleio.yml

# if the secondary is now master, then using this role to reinstall the master will fail - comment out the "add primary mdm" and then run the play.  Then use scli to re-add and switch ownership
- name: add primary mdm
  command: scli --create_mdm_cluster --master_mdm_ip {{ scaleio.mdm1_ip }} --master_mdm_management_ip {{ scaleio.mdm1_ip }} --master_mdm_name {{ scaleio.mdm1_name }}  --accept_license --approve_certificate
  run_once: true
  delegate_to: "{{ scaleio.mdm1_name }}"
  ignore_errors: true
  register: add_primary_mdm
  changed_when: add_primary_mdm.stderr is defined and "'already configured' not in add_primary_mdm.stderr"

- name: wait for mdm to be active
  wait_for: port=6611 state=started
  run_once: true
  delegate_to: "{{ scaleio.mdm1_name }}"

- name: initial login
  command: scli --login --username admin --password admin
  run_once: true
  delegate_to: "{{ scaleio.mdm1_name }}"
  ignore_errors: true
  register: initial_login

- name: extract system id from login stdout
  command: /bin/bash -c "grep -Po 'System ID is \K[^\\\]+' <<< '{{ initial_login.stdout }}'"
  register: systemid
  when: initial_login.rc == 0

- debug: msg="{{ systemid.stdout }}"
  when: initial_login.rc == 0

- name: login with new password
  command: scli --login --username admin --password "{{ scaleio.password }}"
  run_once: true
  register: initial_login2
  delegate_to: "{{ scaleio.mdm1_name }}"
  when: initial_login.rc == 7

- name: extract system id from login stdout
  command: /bin/bash -c "grep -Po 'System ID is \K[^\\\]+' <<< '{{ initial_login2.stdout }}'"
  register: systemid
  when: initial_login.rc == 7

- debug: msg="{{ systemid.stdout }}"
  when: initial_login.rc == 7

- name: set password
  command: scli --set_password --old_password admin --new_password "{{ scaleio.password }}"
  run_once: true
  delegate_to: "{{ scaleio.mdm1_name }}"
  when: initial_login.rc == 0

- name: secondary node login
  command: scli --login --mdm_ip {{ scaleio.mdm1_ip }} --username admin --password {{ scaleio.password }} --approve_certificate
  run_once: true
  delegate_to: "{{ scaleio.mdm1_name }}"

- name: add secondary mdm
  command: scli --add_standby_mdm --new_mdm_ip {{ scaleio.mdm2_ip }} --mdm_role manager --new_mdm_management_ip {{ scaleio.mdm2_ip }} --approve_certificate
  run_once: true
  delegate_to: "{{ scaleio.mdm1_name }}"
  ignore_errors: true

- name: tertiary node login
  command: scli --login --mdm_ip {{ scaleio.mdm1_ip }} --username admin --password {{ scaleio.password }} --approve_certificate
  run_once: true
  delegate_to: "{{ scaleio.mdm3_name }}"
  when: scaleio.mdm3_ip is defined

- name: add tertiary mdm
  command: scli --add_standby_mdm --new_mdm_ip {{ scaleio.mdm3_ip }} --mdm_role manager --new_mdm_management_ip {{ scaleio.mdm3_ip }} --approve_certificate
  run_once: true
  delegate_to: "{{ scaleio.mdm1_name }}"
  ignore_errors: true
  when: scaleio.mdm3_ip is defined

- name: Change system name for later reference by rexray
  command: scli --rename_system --new_name {{ scaleio.system_name }}
  run_once: true
  delegate_to: "{{ scaleio.mdm1_name }}"
  ignore_errors: true
